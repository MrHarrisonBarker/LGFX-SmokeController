<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Style TargetType="{x:Type TextElement}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- A shared context menu for all text boxes and rich text boxes. Change or replace as desired -->
    <ContextMenu x:Key="TextBoxDefaultContextMenu" x:Shared="True">
        <MenuItem Header="Undo" Command="Undo"/>
        <MenuItem Header="Redo" Command="Redo"/>
        <Separator/>
        <MenuItem Header="Cut" Command="Cut"/>
        <MenuItem Header="Copy" Command="Copy"/>
        <MenuItem Header="Paste" Command="Paste"/>
        <MenuItem Header="Delete" Command="Delete"/>
        <Separator/>
        <MenuItem Header="Select All" Command="SelectAll"/>
    </ContextMenu>

    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ABrush.Glyph.Static}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection.Inactive}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ABrush.ColourfulGlyph.Static}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxDefaultContextMenu}"/>
        <Setter Property="MinWidth" Value="10"/>
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
        </Style.BasedOn>
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
            <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource ABrush.ColourfulGlyph.Static}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type xctk:ByteUpDown}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxDefaultContextMenu}"/>
    </Style>
    
    <Style TargetType="{x:Type xctk:SingleUpDown}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxDefaultContextMenu}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ABrush.Glyph.Static}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxDefaultContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Margin="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection.Inactive}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- <Style x:Key="HintedTextBox" TargetType="{x:Type TextBox}"> -->
    <!--     <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/> -->
    <!--     <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/> -->
    <!--     <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/> -->
    <!--     <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/> -->
    <!--     <Setter Property="CaretBrush" Value="{DynamicResource ABrush.Glyph.Static}"/> -->
    <!--     <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection}"/> -->
    <!--     <Setter Property="BorderThickness" Value="1"/> -->
    <!--     <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/> -->
    <!--     <Setter Property="HorizontalContentAlignment" Value="Left"/> -->
    <!--     <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
    <!--     <Setter Property="AllowDrop" Value="true"/> -->
    <!--     <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/> -->
    <!--     <Setter Property="Stylus.IsFlicksEnabled" Value="False"/> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="{x:Type TextBox}"> -->
    <!--                 <Grid> -->
    <!--                     <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"> -->
    <!--                         <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/> -->
    <!--                     </Border> -->
    <!--                     <TextBlock IsHitTestVisible="False" -->
    <!--                                Text="{TemplateBinding Tag}" -->
    <!--                                x:Name="PART_Placeholder" -->
    <!--                                FontFamily="{TemplateBinding FontFamily}" -->
    <!--                                FontSize="{TemplateBinding FontSize}" -->
    <!--                                Margin="3 0 0 0" -->
    <!--                                Padding="{TemplateBinding Padding}" -->
    <!--                                VerticalAlignment="Center" -->
    <!--                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" -->
    <!--                                Foreground="{DynamicResource ABrush.Foreground.Disabled}"> -->
    <!--                         <TextBlock.Style> -->
    <!--                             <Style TargetType="{x:Type TextBlock}"> -->
    <!--                                 <Setter Property="Visibility" Value="Collapsed"/> -->
    <!--                                 <Style.Triggers> -->
    <!--                                     <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value=""> -->
    <!--                                         <Setter Property="Visibility" Value="Visible"/> -->
    <!--                                     </DataTrigger> -->
    <!--                                     <MultiDataTrigger> -->
    <!--                                         <MultiDataTrigger.Conditions> -->
    <!--                                             <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/> -->
    <!--                                             <Condition Binding="{Binding (a:TextHinting.ShowWhenFocused), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/> -->
    <!--                                         </MultiDataTrigger.Conditions> -->
    <!--                                         <MultiDataTrigger.Setters> -->
    <!--                                             <Setter Property="Visibility" Value="Collapsed"/> -->
    <!--                                         </MultiDataTrigger.Setters> -->
    <!--                                     </MultiDataTrigger> -->
    <!--                                 </Style.Triggers> -->
    <!--                             </Style> -->
    <!--                         </TextBlock.Style> -->
    <!--                     </TextBlock> -->
    <!--                 </Grid> -->
    <!--                 <ControlTemplate.Triggers> -->
    <!--                     <Trigger Property="IsEnabled" Value="false"> -->
    <!--                         <Setter Property="Opacity" TargetName="border" Value="0.56"/> -->
    <!--                     </Trigger> -->
    <!--                     <Trigger Property="IsMouseOver" Value="true"> -->
    <!--                         <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/> -->
    <!--                     </Trigger> -->
    <!--                     <Trigger Property="IsKeyboardFocused" Value="true"> -->
    <!--                         <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/> -->
    <!--                     </Trigger> -->
    <!--                 </ControlTemplate.Triggers> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!--     <Style.Triggers> -->
    <!--         <MultiTrigger> -->
    <!--             <MultiTrigger.Conditions> -->
    <!--                 <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/> -->
    <!--                 <Condition Property="IsSelectionActive" Value="false"/> -->
    <!--             </MultiTrigger.Conditions> -->
    <!--             <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection.Inactive}"/> -->
    <!--         </MultiTrigger> -->
    <!--     </Style.Triggers> -->
    <!-- </Style> -->

    <!-- <Style x:Key="HintedPasswordBox" TargetType="{x:Type PasswordBox}"> -->
    <!--     <Setter Property="PasswordChar" Value="●"/> -->
    <!--     <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/> -->
    <!--     <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/> -->
    <!--     <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/> -->
    <!--     <Setter Property="BorderThickness" Value="1"/> -->
    <!--     <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/> -->
    <!--     <Setter Property="HorizontalContentAlignment" Value="Left"/> -->
    <!--     <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
    <!--     <Setter Property="AllowDrop" Value="true"/> -->
    <!--     <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/> -->
    <!--     <Setter Property="Stylus.IsFlicksEnabled" Value="False"/> -->
    <!--     <Setter Property="a:PasswordBoxHelper.ListenToLength" Value="True"/> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="{x:Type PasswordBox}"> -->
    <!--                 <Grid> -->
    <!--                     <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"> -->
    <!--                         <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/> -->
    <!--                     </Border> -->
    <!--                     <TextBlock IsHitTestVisible="False" -->
    <!--                                Text="{TemplateBinding Tag}" -->
    <!--                                x:Name="PART_Placeholder" -->
    <!--                                FontFamily="{TemplateBinding FontFamily}" -->
    <!--                                FontSize="{TemplateBinding FontSize}" -->
    <!--                                Margin="3 0 0 0" -->
    <!--                                Padding="{TemplateBinding Padding}" -->
    <!--                                VerticalAlignment="Center" -->
    <!--                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" -->
    <!--                                Foreground="{DynamicResource ABrush.Foreground.Disabled}"> -->
    <!--                         <TextBlock.Style> -->
    <!--                             <Style TargetType="{x:Type TextBlock}"> -->
    <!--                                 <Setter Property="Visibility" Value="Collapsed"/> -->
    <!--                                 <Style.Triggers> -->
    <!--                                     <DataTrigger Binding="{Binding (a:PasswordBoxHelper.InputLength), RelativeSource={RelativeSource TemplatedParent}}" Value="0"> -->
    <!--                                         <Setter Property="Visibility" Value="Visible"/> -->
    <!--                                     </DataTrigger> -->
    <!--                                     <MultiDataTrigger> -->
    <!--                                         <MultiDataTrigger.Conditions> -->
    <!--                                             <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/> -->
    <!--                                             <Condition Binding="{Binding (a:TextHinting.ShowWhenFocused), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/> -->
    <!--                                         </MultiDataTrigger.Conditions> -->
    <!--                                         <MultiDataTrigger.Setters> -->
    <!--                                             <Setter Property="Visibility" Value="Collapsed"/> -->
    <!--                                         </MultiDataTrigger.Setters> -->
    <!--                                     </MultiDataTrigger> -->
    <!--                                 </Style.Triggers> -->
    <!--                             </Style> -->
    <!--                         </TextBlock.Style> -->
    <!--                     </TextBlock> -->
    <!--                 </Grid> -->
    <!--                 <ControlTemplate.Triggers> -->
    <!--                     <Trigger Property="IsEnabled" Value="false"> -->
    <!--                         <Setter Property="Opacity" TargetName="border" Value="0.56"/> -->
    <!--                     </Trigger> -->
    <!--                     <Trigger Property="IsMouseOver" Value="true"> -->
    <!--                         <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/> -->
    <!--                     </Trigger> -->
    <!--                     <Trigger Property="IsKeyboardFocused" Value="true"> -->
    <!--                         <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/> -->
    <!--                     </Trigger> -->
    <!--                 </ControlTemplate.Triggers> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!--     <Style.Triggers> -->
    <!--         <MultiTrigger> -->
    <!--             <MultiTrigger.Conditions> -->
    <!--                 <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/> -->
    <!--                 <Condition Property="IsSelectionActive" Value="false"/> -->
    <!--             </MultiTrigger.Conditions> -->
    <!--             <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection.Inactive}"/> -->
    <!--         </MultiTrigger> -->
    <!--     </Style.Triggers> -->
    <!-- </Style> -->

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- <Setter Property="FocusVisualStyle" Value="{x:Null}"/> -->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>